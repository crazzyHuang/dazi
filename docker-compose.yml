version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:14-alpine
    container_name: tongpin-postgres
    environment:
      POSTGRES_DB: tongpin_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - tongpin-network
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: tongpin-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tongpin-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # MongoDB 文档数据库
  mongodb:
    image: mongo:6-jammy
    container_name: tongpin-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: tongpin_chat
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - tongpin-network
    restart: unless-stopped

  # Elasticsearch 搜索引擎
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: tongpin-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - tongpin-network
    restart: unless-stopped

  # 用户服务 (User Service)
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: tongpin-user-service
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: tongpin_db
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_REFRESH_SECRET: your-refresh-secret-key-here
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - tongpin-network
    restart: unless-stopped
    volumes:
      - ./backend/user-service/src:/app/src
      - ./backend/user-service/logs:/app/logs
      - /app/node_modules
    command: pnpm run dev

  # 搭子服务 (Post Service) - 待开发
  # post-service:
  #   build:
  #     context: ./post-service
  #     dockerfile: Dockerfile
  #   container_name: tongpin-post-service
  #   environment:
  #     NODE_ENV: development
  #     PORT: 3002
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_NAME: tongpin_db
  #     DB_USER: postgres
  #     DB_PASSWORD: password
  #     REDIS_URL: redis://redis:6379
  #     USER_SERVICE_URL: http://user-service:3001
  #   ports:
  #     - "3002:3002"
  #   depends_on:
  #     - postgres
  #     - redis
  #     - user-service
  #   networks:
  #     - tongpin-network
  #   restart: unless-stopped

  # API 网关 (API Gateway) - 待开发
  # api-gateway:
  #   build:
  #     context: ./api-gateway
  #     dockerfile: Dockerfile
  #   container_name: tongpin-api-gateway
  #   environment:
  #     NODE_ENV: development
  #     PORT: 3000
  #     USER_SERVICE_URL: http://user-service:3001
  #     POST_SERVICE_URL: http://post-service:3002
  #     CHAT_SERVICE_URL: http://chat-service:3003
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - user-service
  #     - post-service
  #     - chat-service
  #   networks:
  #     - tongpin-network
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  elasticsearch_data:

networks:
  tongpin-network:
    driver: bridge